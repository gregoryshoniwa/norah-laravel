import{_ as u,c,o as p,a as s,f as n,w as l,b as f,g as m,h as r,v as d,e as g}from"./app-B5fSuZ6Z.js";/* empty css            */const v={name:"Settings",data(){return{loading:!1,settings:{defaultCurrency:"USD",emailNotifications:!0,smsNotifications:!1,twoFactorAuth:!1,sessionTimeout:30,apiRateLimit:100,enableApiLogs:!0},defaultSettings:{defaultCurrency:"USD",emailNotifications:!0,smsNotifications:!1,twoFactorAuth:!1,sessionTimeout:30,apiRateLimit:100,enableApiLogs:!0}}},mounted(){this.loadSettings()},methods:{async loadSettings(){this.loading=!0;try{const o=localStorage.getItem("appSettings");if(o){this.settings=JSON.parse(o),this.loading=!1;return}const t=await g.get("/api/v1/settings");t.data.success&&(this.settings=t.data.data,localStorage.setItem("appSettings",JSON.stringify(this.settings)))}catch(o){console.error("Error loading settings:",o),this.settings={...this.defaultSettings}}finally{this.loading=!1}},async saveSettings(){try{this.loading=!0,localStorage.setItem("appSettings",JSON.stringify(this.settings));try{(await g.post("/api/v1/settings",this.settings)).data.success&&this.$swal.fire({title:"Success!",text:"Settings saved successfully",icon:"success",timer:2e3,showConfirmButton:!1})}catch(o){console.error("API error when saving settings:",o),this.$swal.fire({title:"Settings Saved Locally",text:"Settings saved to your browser, but could not be saved to the server",icon:"info",timer:3e3,showConfirmButton:!1})}}catch(o){console.error("Error saving settings:",o),this.$swal.fire("Error!","Failed to save settings","error")}finally{this.loading=!1}},resetSettings(){this.$swal.fire({title:"Are you sure?",text:"This will reset all settings to default values",icon:"warning",showCancelButton:!0,confirmButtonColor:"#d33",cancelButtonColor:"#3085d6",confirmButtonText:"Yes, reset settings"}).then(o=>{if(o.isConfirmed){this.settings={...this.defaultSettings},localStorage.removeItem("appSettings");try{g.delete("/api/v1/settings/reset")}catch(t){console.error("Error resetting settings on API:",t)}this.$swal.fire("Reset!","Settings have been reset to defaults","success")}})}}},S={class:"settings-container animate-fade-in"},b={class:"content-card"},h={class:"settings-grid"},y={class:"settings-section"},w={class:"settings-content"},x={class:"form-group"},A={class:"settings-section"},N={class:"settings-content"},C={class:"form-group"},B={class:"checkbox-label"},k={class:"form-group"},U={class:"checkbox-label"},L={class:"settings-section"},P={class:"settings-content"},_={class:"form-group"},I={class:"checkbox-label"},R={class:"form-group"},T={class:"settings-section"},V={class:"settings-content"},E={class:"form-group"},D={class:"form-group"},F={class:"checkbox-label"},G={class:"settings-actions"};function Z(o,t,M,W,i,a){return p(),c("div",S,[t[22]||(t[22]=s("div",{class:"page-header"},[s("h2",null,"System Settings")],-1)),s("div",b,[s("div",h,[s("div",y,[t[11]||(t[11]=s("h3",{class:"settings-title"},[s("i",{class:"ri-money-dollar-circle-line"}),n(" Currency Settings ")],-1)),s("div",w,[s("div",x,[t[10]||(t[10]=s("label",null,"Default Currency",-1)),l(s("select",{"onUpdate:modelValue":t[0]||(t[0]=e=>i.settings.defaultCurrency=e)},t[9]||(t[9]=[m('<option value="USD" data-v-65a3e725>USD - US Dollar</option><option value="ZWG" data-v-65a3e725>ZWG - Zimbabwe Gold</option><option value="ZAR" data-v-65a3e725>ZAR - South African Rand</option><option value="BWP" data-v-65a3e725>BWP - Botswana Pula</option><option value="GBP" data-v-65a3e725>GBP - British Pound</option>',5)]),512),[[f,i.settings.defaultCurrency]])])])]),s("div",A,[t[14]||(t[14]=s("h3",{class:"settings-title"},[s("i",{class:"ri-notification-3-line"}),n(" Notification Settings ")],-1)),s("div",N,[s("div",C,[s("label",B,[l(s("input",{type:"checkbox","onUpdate:modelValue":t[1]||(t[1]=e=>i.settings.emailNotifications=e)},null,512),[[r,i.settings.emailNotifications]]),t[12]||(t[12]=n(" Email Notifications "))])]),s("div",k,[s("label",U,[l(s("input",{type:"checkbox","onUpdate:modelValue":t[2]||(t[2]=e=>i.settings.smsNotifications=e)},null,512),[[r,i.settings.smsNotifications]]),t[13]||(t[13]=n(" SMS Notifications "))])])])]),s("div",L,[t[17]||(t[17]=s("h3",{class:"settings-title"},[s("i",{class:"ri-shield-keyhole-line"}),n(" Security Settings ")],-1)),s("div",P,[s("div",_,[s("label",I,[l(s("input",{type:"checkbox","onUpdate:modelValue":t[3]||(t[3]=e=>i.settings.twoFactorAuth=e)},null,512),[[r,i.settings.twoFactorAuth]]),t[15]||(t[15]=n(" Two-Factor Authentication "))])]),s("div",R,[t[16]||(t[16]=s("label",null,"Session Timeout (minutes)",-1)),l(s("input",{type:"number","onUpdate:modelValue":t[4]||(t[4]=e=>i.settings.sessionTimeout=e),min:"5",max:"120"},null,512),[[d,i.settings.sessionTimeout]])])])]),s("div",T,[t[20]||(t[20]=s("h3",{class:"settings-title"},[s("i",{class:"ri-code-line"}),n(" API Settings ")],-1)),s("div",V,[s("div",E,[t[18]||(t[18]=s("label",null,"API Rate Limit (requests/minute)",-1)),l(s("input",{type:"number","onUpdate:modelValue":t[5]||(t[5]=e=>i.settings.apiRateLimit=e),min:"10",max:"1000"},null,512),[[d,i.settings.apiRateLimit]])]),s("div",D,[s("label",F,[l(s("input",{type:"checkbox","onUpdate:modelValue":t[6]||(t[6]=e=>i.settings.enableApiLogs=e)},null,512),[[r,i.settings.enableApiLogs]]),t[19]||(t[19]=n(" Enable API Logs "))])])])])]),s("div",G,[s("button",{class:"btn-secondary",onClick:t[7]||(t[7]=(...e)=>a.resetSettings&&a.resetSettings(...e))},"Reset"),s("button",{class:"btn-primary",onClick:t[8]||(t[8]=(...e)=>a.saveSettings&&a.saveSettings(...e))},t[21]||(t[21]=[s("i",{class:"ri-save-line"},null,-1),n(" Save Changes ")]))])])])}const q=u(v,[["render",Z],["__scopeId","data-v-65a3e725"]]);export{q as default};
